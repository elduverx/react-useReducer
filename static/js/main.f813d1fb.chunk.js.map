{"version":3,"sources":["components/Heading.jsx","context/AppReducer.jsx","context/GlobalContext.jsx","components/TaskForm.jsx","components/TaskList.jsx","App.js","index.js"],"names":["Heading","className","to","appReducer","state","type","payload","tasks","filter","task","id","updatedTask","map","title","description","done","initialState","GlobalContext","createContext","ContextProvider","children","useReducer","dispatch","Provider","value","deleteTask","addTask","uniqid","updateTask","toggleTaskDone","TaskForm","useContext","history","useHistory","params","useParams","useState","setTask","handlechange","e","target","name","useEffect","taskFound","find","onSubmit","preventDefault","push","placeholder","onChange","rows","TaskList","onClick","App","exact","path","component","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.f813d1fb.chunk.js","sourcesContent":["import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { IoAdd } from 'react-icons/io5';\r\nconst Heading = () => {\r\n  return (\r\n    <div>\r\n      <div className=\"flex item-center- mb-10\">\r\n        <Link to=\"/\">\r\n          <h5 className=\"text-gray-100 font-bold text-2x1\">Task Crud</h5>\r\n        </Link>\r\n        <div className=\"flex-grow text-right px-4 py-2 m-2\">\r\n          <Link to=\"/add\">\r\n            <button className=\"bg-green-400 hover:bg-green-300 text-white font-semibold py-2 px-4 rounded inline-flex items-center\">\r\n              <IoAdd />\r\n              ADD Task\r\n            </button>\r\n          </Link>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Heading;\r\n","export default function appReducer(state, { type, payload }) {\r\n  switch (type) {\r\n    case 'ADD_TASK':\r\n      return {\r\n        tasks: [...state.tasks, payload],\r\n      };\r\n    case 'DELETE_TASK':\r\n      return {\r\n        tasks: state.tasks.filter((task) => task.id !== payload),\r\n      };\r\n    case 'UPDATE_TASK':\r\n      const updatedTask = payload;\r\n\r\n      const updatedTasks = state.tasks.map((task) => {\r\n        if (task.id === updatedTask.id) {\r\n          task.title = updatedTask.title;\r\n          task.description = updatedTask.description;\r\n        }\r\n        return task;\r\n      });\r\n\r\n      return { task: updatedTasks };\r\n\r\n    case 'TOGGLE_TASK_DONE':\r\n      return {\r\n        tasks: state.tasks.map((task) =>\r\n          task.id === payload ? { ...task, done: !task.done } : task\r\n        ),\r\n      };\r\n\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","import { createContext, useReducer } from 'react';\r\nimport appReducer from './AppReducer';\r\nimport uniqid from 'uniqid';\r\nconst initialState = {\r\n  tasks: [\r\n    {\r\n      id: ' 1',\r\n      title: 'title one',\r\n      description: 'some description',\r\n      done: false,\r\n    },\r\n    {\r\n      id: ' 2',\r\n      title: 'title two',\r\n      description: 'some description',\r\n      done: false,\r\n    },\r\n  ],\r\n};\r\n\r\nexport const GlobalContext = createContext(initialState);\r\n\r\nexport const ContextProvider = ({ children }) => {\r\n  const [state, dispatch] = useReducer(appReducer, initialState);\r\n\r\n  const addTask = (task) => {\r\n    //console.log(task);\r\n    dispatch({\r\n      type: 'ADD_TASK',\r\n      payload: { ...task, id: uniqid(), done: false },\r\n    });\r\n  };\r\n\r\n  const deleteTask = (id) => {\r\n    dispatch({ type: 'DELETE_TASK', payload: id });\r\n  };\r\n\r\n  const updateTask = (task) => {\r\n    dispatch({ type: 'UPDATE_TASK', payload: task });\r\n  };\r\n\r\n  const toggleTaskDone = (id) =>\r\n    dispatch({ type: 'TOGGLE_TASK_DONE', payload: id });\r\n\r\n  return (\r\n    <GlobalContext.Provider\r\n      value={{ ...state, deleteTask, addTask, updateTask, toggleTaskDone }}\r\n    >\r\n      {children}\r\n    </GlobalContext.Provider>\r\n  );\r\n};\r\n","import React, { useState, useContext, useEffect } from 'react';\r\nimport { GlobalContext } from '../context/GlobalContext';\r\nimport { useParams, useHistory } from 'react-router-dom';\r\nconst TaskForm = () => {\r\n  const { addTask, tasks, updateTask } = useContext(GlobalContext);\r\n  const history = useHistory();\r\n  const params = useParams();\r\n  const [task, setTask] = useState({\r\n    id: '',\r\n    title: '',\r\n    description: '',\r\n  });\r\n\r\n  const handlechange = (e) => {\r\n    setTask({ ...task, [e.target.name]: e.target.value });\r\n  };\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n\r\n    if (task.id) {\r\n      updateTask(task);\r\n    } else {\r\n      addTask(task);\r\n    }\r\n\r\n    history.push('/');\r\n  };\r\n\r\n  useEffect(() => {\r\n    const taskFound = tasks.find((task) => task.id === params.id);\r\n\r\n    if (taskFound) {\r\n      setTask(taskFound);\r\n    }\r\n  }, [params.id, tasks]);\r\n\r\n  return (\r\n    <div className=\"flex justify-center items-center h-3/4\">\r\n      <form onSubmit={handleSubmit} className=\"bg-gray-900 p-10\">\r\n        <h2 className=\"mb-7 text-3x1\">\r\n          {task.id ? 'Editing a Task' : 'Creating a Task'}\r\n        </h2>\r\n        <div className=\"mb-5\">\r\n          <input\r\n            type=\"text\"\r\n            name=\"title\"\r\n            placeholder=\"write a Title\"\r\n            onChange={handlechange}\r\n            value={task.title}\r\n            className=\"py-3 px-4 focus:outline-none focus:text-gray-100 bg-gray-700 w-full\"\r\n          />\r\n          <textarea\r\n            className=\"py-3 px-4 focus:outline-none focus:text-gray-100 bg-gray-700 w-full mt-7\"\r\n            name=\"description\"\r\n            placeholder=\"Write a Description\"\r\n            onChange={handlechange}\r\n            value={task.description}\r\n            rows=\"2\"\r\n          ></textarea>\r\n        </div>\r\n        <button className=\"bg-green-700 w-full hover:bg-green-300 py-2 px-4 mt-5\">\r\n          {task.id ? 'Edit ' : 'Create'} Task\r\n        </button>\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default TaskForm;\r\n","import React, { useContext } from 'react';\r\nimport { GlobalContext } from '../context/GlobalContext';\r\nimport { Link } from 'react-router-dom';\r\nconst TaskList = () => {\r\n  const { tasks, deleteTask, toggleTaskDone } = useContext(GlobalContext);\r\n\r\n  return (\r\n    <div className=\"flex justify-center\">\r\n      <div className=\"w-6/12\">\r\n        {tasks.map((task) => (\r\n          <div\r\n            key={task.id}\r\n            className=\"bg-gray-900 px-20 py-5 text-white shadow-2x1 mb-4 flex justify-between\"\r\n          >\r\n            <div>\r\n              <h1>{task.title}</h1>\r\n              <h6>{task.id}</h6>\r\n              <p>{task.description}</p>\r\n              <button\r\n                className=\"bg-purple-500 hover:bg-purple-600 py-1 px-3 mt-2\"\r\n                onClick={() => toggleTaskDone(task.id)}\r\n              >\r\n                {task.done ? 'Undone' : 'done'}\r\n              </button>\r\n            </div>\r\n            <div>\r\n              <Link\r\n                to={`/edit/${task.id}`}\r\n                className=\"bg-gray-600 hover:bg-gray-500 py-2 px-4 mr-2\"\r\n              >\r\n                Edit\r\n              </Link>\r\n              <button\r\n                className=\"bg-red-500 hover:bg-red-400 py-2 px-4 mr-2\"\r\n                onClick={() => deleteTask(task.id)}\r\n              >\r\n                Delete\r\n              </button>\r\n            </div>\r\n          </div>\r\n        ))}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default TaskList;\r\n","import { Route, Switch } from 'react-router-dom';\nimport Heading from './components/Heading';\nimport TaskForm from './components/TaskForm';\nimport TaskList from './components/TaskList';\nimport { ContextProvider } from './context/GlobalContext';\nimport './App.css';\n\nfunction App() {\n  return (\n    <div>\n      <div className=\"h-screen text-white text-center p-10\">\n        <div className=\"container mx-auto h-full\">\n          <ContextProvider>\n            <Heading />\n            <Switch>\n              <Route exact path=\"/\" component={TaskList}></Route>\n              <Route path=\"/add\" component={TaskForm}></Route>\n              <Route path=\"/edit/:id\" component={TaskForm}></Route>\n            </Switch>\n          </ContextProvider>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter } from 'react-router-dom';\nimport './tailwind.css';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <BrowserRouter>\n      <App />\n    </BrowserRouter>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}